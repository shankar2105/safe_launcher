env:
  global:
  - secure: vm1ocS527bo213NMJSY3fhi9VFd4RFIsU8T28DkceihePk0zOk/HO8eJfrRtaBCzwZ4kAVv65fffjH2wSKejS7a+DiIdB12WQ7dFgTgG8poNHoXld1D0xzCORfOmLxl4EQTRatoHBBTnqVHGt49IdqXJ8sTDX3427K50GlN9muSstyDyoXFw33xUhJjFiSmHB+ImlYhJSS+snRidys3GXzkdzjPbL1kmMP950ZdWSIUDW/vdNdOFSqUMSOLEMJX9figNotNfgN7ihFCf8SByBWsjF2LKLB0aJdiDu6EfLVPRuKApbUN/TzlkRTEWUMtDiqdE4pe7IDeFddQtb8W3ZPeecFrp/pfjK0mY0ZBFy00z14b7gu+VvzfXYD2IYbVkMHGENq5CwVgNLE29eRS3/VoWNdVyi6CIBcdKBLcEn4n6YFtuorwoYJ4YNTXcNtNRBiM682yAXIU8odhsZ9v6pqaZ8jsQMKHf2NUbDSOXO2hltPO9krVlCH2X2C61toPupd81NBbHn+wbov/103GIYeuEdGGgeCgLImTbAnVgUBnvzc+F38HDIBpRBOgkpcz0Y4QZnHRSGPW36eLdKraTfV725NwTzWmAqATQZ2MmsK0Ez2f5FDxvRDjnUoFonZohNJFUBMzNiON/I3iGLJDFYs2Gp0gvE6EZD6ICy1E+AI4=
  - FFIDest=$TRAVIS_BUILD_DIR/app/api/ffi
  - PROJECT_NAME=safe_launcher

matrix:
  include:
  - os: linux
    env: |
      PLATFORM=linux-x64
      PACKAGE_NAME=safe_launcher-linux-x64
  - os: osx
    env: |
      PLATFORM=osx-x64
      PACKAGE_NAME=safe_launcher-darwin-x64

language: generic

python:
  - '2.7'

osx_image: xcode7.2

sudo: required

dist: trusty

cache:
  cargo: true

addons:
  apt:
    packages:
      - xvfb

before_install:
  - export PROJECT_VERSION=$(git log -1 | grep -i "version change to" | sed "s/.*[vV]ersion change to v\{0,1\}//")
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install libnotify4; sudo apt-get install libgconf-2-4; fi

install:
  - export DISPLAY=':99.0'
  - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
  - curl -sSf https://static.rust-lang.org/rustup.sh | sh
  - rustc -V
  - cargo -V
  - curl -sSLO https://github.com/maidsafe/QA/raw/master/Bash%20Scripts/Travis/install_libsodium.sh
  - ". install_libsodium.sh"
  - nvm --version
  - nvm install 5.5.0
  - node --version
  - npm --version
  - python --version

script:
  - cd $TRAVIS_BUILD_DIR
  - git clone https://github.com/maidsafe/safe_core.git && cd safe_core
  - cargo build --release --verbose --features use-mock-routing
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cp ./target/release/libsafe_core.so $FFIDest; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then cp ./target/release/libsafe_core.dylib $FFIDest; fi
  - cd $TRAVIS_BUILD_DIR
  - npm install
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then npm install -g electron-prebuilt; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then npm install -g gulp-electron-mocha; fi
  - npm test

after_success:
  - cd $TRAVIS_BUILD_DIR
  - cd safe_core
  - cargo build --release

before_deploy:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cp ./target/release/libsafe_core.so $FFIDest; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then cp ./target/release/libsafe_core.dylib $FFIDest; fi
  - cd $TRAVIS_BUILD_DIR
  - git config --global user.name shankar2105
  - git config --global user.email shankar21mail@gmail.com
  - git fetch --tags
  - if [ -z $(git tag -l "$PROJECT_VERSION") ]; then git tag $PROJECT_VERSION -am "Version $PROJECT_VERSION" $TRAVIS_COMMIT; git push https://${GH_TOKEN}@github.com/${TRAVIS_REPO_SLUG} tag $PROJECT_VERSION > /dev/null 2>&1; fi
  - npm run package
  - git clone https://${GH_TOKEN}@github.com/maidsafe/release_config
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then mv release_config/safe_launcher/* app_dist/$PACKAGE_NAME/; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then mv release_config/safe_launcher/* "app_dist/$PACKAGE_NAME/safe_launcher.app/Contents/Frameworks/safe_launcher Helper.app/Contents/MacOS/"; fi
  - pushd ./app_dist
  - tar czf ../${PROJECT_NAME}-v${PROJECT_VERSION}-${PLATFORM}.tar.gz *
  - popd
  - cd $TRAVIS_BUILD_DIR

deploy:
  provider: releases
  api_key: ${GH_TOKEN}
  file: "${PROJECT_NAME}-v${PROJECT_VERSION}-${PLATFORM}.tar.gz"
  skip_cleanup: true
  tag_name: "${PROJECT_VERSION}"
  draft: true
  on:
    condition: |
      (-n "$PROJECT_VERSION") && (-n "$PLATFORM")
    all_branches: true
