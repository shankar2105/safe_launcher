env:
  global:
  - secure: fkVf6Lu904KcLGst8TxB/MYdldkavdoCpp44b9PSe6dsGSqG+I5/ofcp4Qwz5FfhKyBW3vId2lg6cZ0bnMP1DCSU4mRWUuli3tmAxGrAA5t7lwmcrAaXE6WddTzoEL2EC+TsSFIdeQ9McYUuQmxJttkffQUxcsiVKN0mQD0erW47WQcSMLehmQHlrrd7QWRH7fwec6AuOmFYZpqYxI6ZkmfvovsHbIswNEdmRofRzNmYquc1GyJKAqfcEGbrDB0c5mjSHiaG7cDMAri+SwuvSOUgD1doFKKDYniVCrGZziR0hn0mmc9TT0g8iGYBIZmpn4zJIzVnalD0wzpKJslU9Euf6rlH1tuBym9XvH/IwbcXfYzZy6hSQRGpmLH2323az/x4ejCowzV3QYtb7S+/BaXgX1VC1fhLAezPXxZpnnN+4y3JKFmMqJoNav3rDDSdFgUfDEtiNh1U1c2bduurNVlA0+7WPJXSUHbV3zgRjJE51L3dITG55tZyD/HSFMxMGj2miT2IGehz0dPvVDP97AHETZPmDsJpqedjCkyxUxUWm28USlodr/8pzB2lJou1VKj8QhklrQoRvg/yPvKC7z2zVqpM6H4xkfpvVxZIawl9lzmWiIbMnfls4shxQFgURbzRfwhk3ahcsO7vIrGAlFKIfz4r8/k03PjNF5Jvq9g=
  - FFIDest=$TRAVIS_BUILD_DIR/app/api/ffi
  - PROJECT_NAME=safe_launcher

matrix:
  include:
  - os: linux
    env: |
      PLATFORM=linux-x64
      PLATFORM_NAME=linux
  - os: osx
    env: |
      PLATFORM=osx-x64
      PLATFORM_NAME=darwin
language: generic

python:
  - '2.7'

osx_image: xcode7.2

sudo: required

dist: trusty

cache:
  cargo: true

addons:
  apt:
    packages:
      - xvfb

before_install:
  - export PROJECT_VERSION=$(git log -1 | grep -i "version change to" | sed "s/.*[vV]ersion change to v\{0,1\}//")
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install libnotify4; sudo apt-get install libgconf-2-4; fi
install:
  - export DISPLAY=':99.0'
  - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
  - curl -sSf https://static.rust-lang.org/rustup.sh | sh
  - rustc -V
  - cargo -V
  - curl -sSLO https://github.com/maidsafe/QA/raw/master/Bash%20Scripts/Travis/install_libsodium.sh
  - ". install_libsodium.sh"
  - nvm --version
  - nvm install 5.5.0
  - node --version
  - npm --version
  - python --version

after_install:
  - npm install -g json
  - export PRODUCT_NAME=$(cat $TRAVIS_BUILD_DIR/app/package.json | json productName)
  - export PACKAGE_NAME="$PRODUCT_NAME-v$PROJECT_VERSION-$PLATFORM_NAME-x64"

script:
  - cd $TRAVIS_BUILD_DIR
  - git clone https://github.com/maidsafe/safe_core.git && cd safe_core
  - cargo build --release --verbose --features use-mock-routing
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then cp ./target/release/libsafe_core.dylib $FFIDest; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cp ./target/release/libsafe_core.so $FFIDest; fi
  - cd $TRAVIS_BUILD_DIR
  - npm install
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then npm install -g electron-prebuilt; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then npm install -g gulp-electron-mocha; fi
  - npm test

before_deploy:
  - cd $TRAVIS_BUILD_DIR
  - cd safe_core
  - cargo build --release
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cp ./target/release/libsafe_core.so $FFIDest; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then cp ./target/release/libsafe_core.dylib $FFIDest; fi
  - cd $TRAVIS_BUILD_DIR
  - git config --global user.name shankar2105
  - git config --global user.email shankar21mail@gmail.com
  - git fetch --tags
  - if [ -z $(git tag -l "$PROJECT_VERSION") ]; then git tag $PROJECT_VERSION -am "Version $PROJECT_VERSION" $TRAVIS_COMMIT; git push https://${GH_TOKEN}@github.com/${TRAVIS_REPO_SLUG} tag $PROJECT_VERSION > /dev/null 2>&1; fi
  - npm run package
  - git clone https://${GH_TOKEN}@github.com/maidsafe/release_config
  - ls
  - ls app_dist
  - ls app_dist/$PACKAGE_NAME/
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then mv release_config/safe_launcher/* app_dist/$PACKAGE_NAME/; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then mv release_config/safe_launcher/safe_launcher.crust.config "release_config/safe_launcher/${PRODUCT_NAME} Helper.crust.config"; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then mv release_config/safe_launcher/* "app_dist/$PACKAGE_NAME/${PRODUCT_NAME}.app/Contents/Frameworks/${PRODUCT_NAME} Helper.app/Contents/MacOS/"; fi
  - pushd ./app_dist
  - tar czf ../${PROJECT_NAME}-v${PROJECT_VERSION}-${PLATFORM}.tar.gz *
  - popd
  - cd $TRAVIS_BUILD_DIR

deploy:
  provider: releases
  api_key: ${GH_TOKEN}
  file: "${PROJECT_NAME}-v${PROJECT_VERSION}-${PLATFORM}.tar.gz"
  skip_cleanup: true
  tag_name: "${PROJECT_VERSION}"
  draft: true
  on:
    all_branches: true
    condition: |
      (-n "$PROJECT_VERSION") && (-n "$PLATFORM")
